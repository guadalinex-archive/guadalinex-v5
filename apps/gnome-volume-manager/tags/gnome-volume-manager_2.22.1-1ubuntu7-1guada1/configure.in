AC_PREREQ(2.52)

AC_INIT(gnome-volume-manager, 2.22.1)
AC_CONFIG_SRCDIR(src)
AM_INIT_AUTOMAKE(AC_PACKAGE_NAME, AC_PACKAGE_VERSION)
AM_CONFIG_HEADER(config.h)

AC_PROG_CC

changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-W[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -W" ;;
  esac

  case " $CFLAGS " in
  *[\ \	]-Waggregate-return[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Waggregate-return" ;;
  esac

  case " $CFLAGS " in
  *[\ \	]-Wmissing-prototypes[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wmissing-prototypes" ;;
  esac

  case " $CFLAGS " in
  *[\ \	]-Wmissing-declarations[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wmissing-declarations" ;;
  esac

  case " $CFLAGS " in
  *[\ \	]-Wcast-align[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wcast-align" ;;
  esac

  case " $CFLAGS " in
  *[\ \	]-Wbad-function-cast[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wbad-function-cast" ;;
  esac

  case " $CFLAGS " in
  *[\ \	]-Wdisabled-optimization[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wdisabled-optimization" ;;
  esac

  case " $CFLAGS " in
  *[\ \	]-Wpointer-arith[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wpointer-arith" ;;
  esac

  case " $CFLAGS " in
  *[\ \	]-Wredundant-decls[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wredundant-decls" ;;
  esac
fi
changequote([,])dnl

AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, AC_PACKAGE_NAME, [Package Name])
GETTEXT_PACKAGE=AC_PACKAGE_NAME
AC_SUBST(GETTEXT_PACKAGE)

IT_PROG_INTLTOOL([0.35.0])
AM_GLIB_GNU_GETTEXT

dnl Check for debug
AC_MSG_CHECKING(whether to enable debugging)
gvm_debug_default="yes"
AC_ARG_ENABLE(debug,AS_HELP_STRING([--enable-debug],[with debugging code]),,[enable_debug=$gvm_debug_default])
if test "x$enable_debug" = "xyes"; then
        AC_DEFINE([GVM_DEBUG],[],[Enable debugging])
        AC_MSG_RESULT(yes)
else
        AC_MSG_RESULT(no)
fi

dnl Enable run-time multi-user checks (which involve console-auth-dir)
AC_MSG_CHECKING(whether to enable run-time multiuser checks)
AC_ARG_ENABLE(multiuser,AS_HELP_STRING([--enable-multiuser],[enable multiuser checks]),,[enable_multiuser="yes"])
if test "x$enable_multiuser" = "xyes"; then
	AC_DEFINE([ENABLE_MULTIUSER],[],[Enable multiuser checks])
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)
fi

dnl Directory to check for console ownership
AC_ARG_WITH(console-auth-dir,
            AC_HELP_STRING([--with-console-auth-dir=[dirname]], [directory to check for console ownership]),
            [GVM_CONSOLE_AUTH_DIR=$with_console_auth_dir],
            [GVM_CONSOLE_AUTH_DIR=/var/run/console])

AC_SUBST(GVM_CONSOLE_AUTH_DIR)
AC_DEFINE_UNQUOTED(GVM_CONSOLE_AUTH_DIR, "$GVM_CONSOLE_AUTH_DIR", [Directory to check for console ownership])

PKG_CHECK_MODULES(GVM, libgnomeui-2.0 dbus-glib-1 >= 0.31 hal >= 0.5.4 gtk+-2.0 >= 2.6.0)
AC_SUBST(GVM_CFLAGS)
AC_SUBST(GVM_LIBS)

PKG_CHECK_MODULES(CAPPLET, libgnomeui-2.0 >= 2.1.5 libglade-2.0 hal >= 0.5.4  gtk+-2.0 >= 2.6.0)
AC_SUBST(CAPPLET_CFLAGS)
AC_SUBST(CAPPLET_LIBS)

PKG_CHECK_MODULES([NOTIFY], [libnotify >= 0.3.0], [enable_notify=yes], [enable_notify=no])
if test "x$enable_notify" != "xno"; then
   AC_DEFINE_UNQUOTED([ENABLE_NOTIFY], 1, [Enable notifications with libnotify])
   AC_SUBST(NOTIFY_CFLAGS)
   AC_SUBST(NOTIFY_LIBS)
fi

AC_PATH_PROG(GCONFTOOL, gconftool-2)
AM_GCONF_SOURCE_2

AC_OUTPUT([
Makefile
src/Makefile
po/Makefile.in
gnome-volume-manager.spec
])

echo "
        gnome-volume-manager has been configured as follows: "
echo "  
        Enable multiuser:    $enable_multiuser
        Console auth dir:    ${GVM_CONSOLE_AUTH_DIR}
        libnotify support:   $enable_notify
        Nautilus path:       $nautilus_path
"
